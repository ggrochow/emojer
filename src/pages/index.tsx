import { useUser } from "@clerk/nextjs";
import { InferQueryResult } from "@trpc/react-query/dist/utils/inferReactQueryProcedure";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

import { api, RouterOutputs } from "~/utils/api";

const TopNav = () => {
  const user = useUser();

  return (
    <nav className="flex w-full flex-wrap items-center justify-between bg-gray-800 p-6 shadow-lg">
      <div className="mr-6 flex flex-shrink-0 items-center text-white">
        <span className="text-xl font-semibold tracking-tight">ðŸ˜¶ Emojer</span>
      </div>
      <div>
        <img
          src={user.user?.profileImageUrl}
          alt="Profile"
          className="h-10 w-10 rounded-full"
        />
      </div>
    </nav>
  );
};

type TweetData = RouterOutputs["example"]["getAll"][number];

const TweetView = (props: { tweet: TweetData }) => {
  return (
    <div className="border-t border-zinc-700 p-4 shadow-lg">
      <div className="flex items-center">
        <img
          src={props.tweet.user.profileImageUrl}
          alt="Profile"
          className="h-14 w-14 rounded-full"
        />
        <div className="ml-3 flex flex-col text-2xl">
          <div className="text-base font-bold text-slate-300">
            <span>{`@ ${props.tweet.user.username}`}</span>
            <span className="font-thin">{` Â· ${dayjs(
              props.tweet.createdAt
            ).fromNow()}`}</span>
          </div>
          <div className="text-slate-300">{props.tweet.content}</div>
        </div>
      </div>
    </div>
  );
};

const CreatePostWizard = () => {
  const [content, setContent] = useState("");

  const { mutate, isLoading } = api.example.createPost.useMutation({
    onSuccess: () => setContent(""),
  });

  return (
    <div className="flex w-48 justify-center p-4">
      <textarea
        value={content}
        onChange={(e) => setContent(e.target.value)}
        disabled={isLoading}
      />
      <button onClick={() => mutate({ message: content })}>Create</button>
    </div>
  );
};

const Feed = () => {
  const { data } = api.example.getAll.useQuery();
  return (
    <div className="flex h-full w-[600px] grow flex-col border-l border-r border-zinc-700">
      <CreatePostWizard />
      {data?.map((post) => (
        <TweetView key={post.id} tweet={post} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>ðŸ˜¶ Emojer</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center bg-black text-white">
        <Feed />
      </main>
    </>
  );
};

export default Home;
